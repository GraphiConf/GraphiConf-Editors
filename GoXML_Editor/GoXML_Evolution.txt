Author: badr	-	Date Creation: 28/10/2010

Overview:
This document describes and traces the evolution of GOC (Graphical Object Configurer).
For the moment there are two projects:
- GOC Framwork
- GOC XML Editor

The beginning of the project is estimated to december 2010, specs, global vision, studying and bunchmarking...
The effective beginning remotes to 26.09.2010 - ref to g0c code.google.com.


Evolution: each time I add a significative evolution, I have trace it in this file.
--> Version 1.0 created
@28.10.10	: at this level we can load objects from XML file with subobjects and properties modifications
			: - Creation of this document
			: - Integration of QPointer<GOCObject>
			: - Integration of QSharedPointer<GOCAttribute>, we don't use QPointer because it is reserved for QObject
			: - GOCObjectModel:: add list of used attributes IDs to determine a new ID for an attribute
			: - Integration of QPointer<GOCXMLObject>
			: - Integration of QPointer<GOCSpaceView>
			: - Init m_ObjectSubbed to false: solves the problem when we double click on a non subbed object.
			: - Integration of QPointer<GOCSpace>
@29.10.10	: need to continue integration of QPointer to GOCObjectModel, GOCObjectView, GOCPropertiesView, GOCSpaceModel, GOCXMLSpace
			: - Integration og QPointer<GOCObjectModel> 
			: - Integration of QPointer<GOCObjectView>
			: - Integration of QPointer<GOCPropertiesView>
			: - Integration of QPointer<GOCSpaceModel>
			: - Add propertie "bool attVisible" in GOCAttribute: when it is set to true, the corresponding attribute
			 is displyed in the Object View.
			: - Able to display "Name:Value" near to the object
			: - Able to display the attributes name and value near to the object
			: - When an object is selected its Z-Value is set to 10 else it is set to 1
@30.10.10	: - Add GOCAttributeView from QGraphicsSimpleTextItem - displayed when the visibility attribute is set to true
			: - The visible attributes are displayed correctly, but the last one isn't displayed automatically
@31.10.10	: - Begin the implementation of graphically removing the objects
			: - GOCSpace is reponsible for removing GOCObject, XMLGOCSpace is responsible for remove GOCXMLObjects
@02.11.10	: - Deletion of object, space, sub objects and sub spaces seems to work correctly now. Before, I got exceptions due to the 
				call of ~GOCObject in ~GOCXMLObject. Now I will work on saving the xml of a GOCXMLObject with Ctrl+S
			: - Can save XML File after removing sub objects
			: - XML correctly saved after modifying the value of the attributes
			: - Can modify the attributes name and value, can modify the name of the node and save the modifications.
			->Objective 1.1.7: MainView integration: it will contain the spaceview, propertiesview and a menue
@03.11.10	: - Can display the subspaces in a MDI view (GOCMDIView::QMdiArea)
			: - Can close and reopen subspaces in a MainView without noticed problem
			: - Added prperties view as dockwidget, but crash when close mainWindow (due to PropertiesView) -> improve killing process
@04.11.10	: - No crash when close mainWindow
			->Objective 1.1.8: Import a XML file using the menu
			: - Can specify the location of the xml file using the menu
@06.11.10	: - Use Vc2005 qt plugin to create moc_* files of GOCXMLSpace,LoadThead,Object,ObjectThread
			->Objective 1.1.8.1: performance, remove the Q_PROPERTY mechanisme!
			: - Q_PROPERTY mechanism removed
			: - continue with QThread of loading: creation of object and spaces
			: -> We can't create QWidget views in the threads other than the main one: apply the thread optimisation for the Non QWidets objects
--> Version 1.1 created
@08.11.10	: - Add GOCRegister : to create GOCViewSpace
			: - J'ai bossé toute la journée sur les threads, mais c'est pas simple: repenser le design!
@09.11.10	: - Repenser la chaine de création des view:
				-> Les space view vont être crées à fur et à mesur de la demande du user
			->Objective 1.1.8.2: Dynamic creation of SpaceView
@12.11.10	: - The loadding in a thread works correctly
			: - The dynamic spaceview creation works correctly but with some issues: GOCAttributeViews aren't displayed, the position of the objects isn't respected
			: - GOCAttributes view are displayed: should set the  parent of the attributeview to objectview
			: - The position of the objects is according to object.rect: in create view we set the position of the object view
			: ->Object removing doesn't work
			: - We can remove object without crash
@15.11.10	: - Add loading progress bar
@18.11.10	: - Improve the Load and Export menues and actions
			: - Add Traces Macro and test pointer, TestQPointer, TestPointer
			: - Add GOCMultiSpace which displays the loaded files
			->Objective 1.1.10.1: GOF: Import/export gox
@22.11.10	: - We can save the xml content of a selected object
			: - Update Export file filtering
			: - Add QString/QRectF conversion
			: - We can save the inner attributes in gox file
@23.11.10	: - We can load the gox file with respecting the inner attributes
			: - We can load and save gox file with all the attribute - ObjectNodeName isn't an inner attribute
@24.11.10	: - Implement mecanism of importing gocobjects from gox file in gocframework (not tested)
@25.11.10	: - We can load GOCObject from gox
			->Objective 1.1.10.2:GOCXMLEditor: xml/gox import/export menus actions
			: - We can import and export xml/gox file
			->Objective 1.1.9.1: GOF: import/export will pass by gox element
			: - The properties view is automatically fit to the content when we select a new object
@26.11.10	: - The export of xml files passes by gox
			->Objective 1.1.9.2: Dynamic creation/copy/past of objects
@29.11.10	: - XML Editor: We can create a new object
			: - Add max object per space
			: - Add node value (DomText)
			: - A menu is opened when we right click an object
@01.12.10	: - Update color, back ground and outline of objects
			: - Optimisation: Remove slot/sig from objects/object view
			: - Optimisiation: Possibility to set debug or unset it - this improved
			: - Remove m_domElement from GOCXMLObject
			: - Each xml file is opened in an independant MDI view
@02.12.10	: - Each xml file is opened in a tab MDI View
			: - Copy/Past: Add GOCRegister (contains the references of ceated objects) and GOCObjectMgr (manages the copy/past of objects), remove GOCViewMgr
			: - Add GOCReferencer, a class to implement the mecanism of registering
			: - We can copy past objects
@03.12.10	: - Add actions (Copy, Past)
@08.12.10	: - We can make object Subbed Unsubbed | when unsubbed it removes all the sub objects 
			: - We can add object in the subspace of an object
@18.12.10	: - GOCMultispace will add GOCMultiObject
@25.12.10       : - When a new file is loaded, we add the path of the file to the created GOCMultiObject
                : - When a new file is loaded, the position of GOCMultiObject is incremented
                : - We can add user attribute
                : - We can add right click object from space
@27.12.10       : - In XMLEditor active subwindow is updated
                : - Tab view improved, each xml file is opened in a new window
                : - Save GOX is disabeled when no file is present
@28.12.10       : - When we delete a XML MultiObject, the MDI Space view is deleted
                : - When we close the XMLEditor application, all the MdiSpaceView are closed
                : - Icon set in every window
                : - We can copy multiple objects
                : - When we create or add a new object to a space, we check the max number to not overpass, when set to -1 = infinit
                : - The background of the multiobject is different from the color of the xml object
                : - We can't modify "ObjectName" attribute
                : - Ctrl+E to display or hide advanced attributes
                : - Set the title of the attributes "ID, Value, Name..."
@29.12.10       : - Correcting some bugs mainly related to attributes
                : - before removing an attribute, check that it is removable
@30.12.10       : - The attributes management is stable
                : - Add "exit" in the file menu
                : - We can add and remove attributes from the properties view
                : - Display only the user's attributes and "ObjectName" attribute
@31.12.10       : - We display all the attributes inner and user ones due to some problems of the Properties viex
                : - Disable riqht click menu on MultiSpace and MultiObject
                : - Each mdi view has its own proprties view
                : - when we save a file, remember the last folder
@01.01.10       : - When: newobject->makesub->when we add a new object, ObjectNodeName and ObjectNodeValue are added
@02.01.10       : - Add column "NameModifiable" in the ObjectModel
                : -

                        open: F2 edit  the name
                        open: link ObjectName and NodeName in the XMLEditor - add XMLPropertiesView to display only user's attributes
			open: the size of the propertiesview should fit to the table
			open: when the mouse is on a tab, show the path in info buble
                        open: remove GOCSpaceView::goc_removeSelectedObjects(void) GOCSpaceView::goc_slotSaveSelectedObject(void)
                        open: Add new param for the attributes: attNameModifiable -> when set to false, user can't modify the name of the attribute
                        open: Add about menu
                        open: In properties view, set inner and user attributes with different colors

                        open: make the names of the attributes of multiobject not modifiables
                        open: create MainFileWindow with menu (add object, remove object, etc) which contains the mdi views of an xml file and its properties

                        open: Ctrl+S = save in the same file
                        open: Save file mechanism - do you want to save?

                        open: when we update the name of an object, the subwindow title has to be updated too
                        open: we can cancel loading of an xml file
                        open: set the setup of the application -> default application to open XML Files

                        open: Possibility to make all attribute invisible/visible
                        open: ObjectNodeName attribute's value has to be free from " " and other characters

			
--> version 1.2.0: this version will be put online
			->objective 1.2.1: documentation + improve performance, and remove unused methods and actions, connections, attributes
			: -
			->Objective 1.2.2.1: GOF: Link objects
			: - 			
			->Objective 1.2.2.1: GOCXMLEditor: Link objects occording to their order in xml file
			: - 
			->Objective 1.2.3.1: Create from a class, Drag/Drop object
			->Objective 1.2.3.2: Load save workspace

--> Issues Track:
    - When a user (Pro) detects a bug, he must connect to his website's account.
    - The creation of the account needs a GOX Serial, which identify a product.
    - Each time a GOX Application is installed, the GOX Serial is generated, it contains
